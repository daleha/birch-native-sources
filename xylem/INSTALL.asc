INSTALLING XYLEM                                  Update  3 Oct 95

As described in:
       Fristensky, B. (1993) Feature expressions: creating and manipulating
       sequence datasets. Nucleic Acids Research 21:5997-6003.


CONTENTS:

I. BASIC INSTALLATION

     A. The files.
     B. Compiling programs (if necessary).
     D. Testing the programs.
     D. Copying files.
     E. Setting environment variables and path

II. WHAT IF YOU DON'T WANT TO INSTALL ALL OF XYLEM?

III. SPECIAL INSTALLATION NOTES FOR GDE

IV. MANAGING GENBANK & PIR

V. RE-COMPILING AND MODIFYING XYLEM PROGRAMS

VI. RUNNING XYLEM ON A REMOTE HOST

VII. CLEAN UP

*********************************************
I  BASIC INSTALLATION
*********************************************

A. The Files
------------

1. If you are reading this, you have already successfully
downloaded, uncompressed and un-tarred xylem.tar.Z. You should now
have the following files and directories in your "xylem" directory:

drwx------  2 neophyte      512 Oct  3 16:53 GDE/
-rw-------  1 neophyte    16742 Oct 29  1994 INSTALL.doc
-rw-------  1 neophyte     2229 Oct  3 17:37 RELEASE.NOTES
drwx------  4 neophyte      512 Oct  3 17:35 admin/
drwx------  2 neophyte      512 Oct  3 17:40 bin/
-rwx------  1 neophyte      232 Aug  2  1993 copycsh.csh*
drwx------  2 neophyte      512 Aug 26 12:11 csh/
drwx------  2 neophyte      512 Aug 26 12:12 doc/
drwx------  5 neophyte      512 Aug 26 10:56 src/
drwx------  2 neophyte      512 Oct  3 17:12 src.c/
drwx------  2 neophyte      512 May 30 12:23 test/

2. Copy the csh scripts from "csh" to "bin" by typing

copycsh.csh

while in the "xylem" directory. This script writes copies of the
xylem csh scripts into the bin directory, leaving off the ".csh"
file extension.

3. If you plan on using the pre-compiled versions of the programs,
you should also have downloaded the binary files specific for your
system. For example, to install XYLEM on a Sun Sparcstation, you
should also have the file 

xylem_sparc_bin.tar.Z

Copy this file to the 'bin' directory, uncompress and un-tar it.

cp xylem_sparc_bin.tar.Z bin
cd bin
uncompress xylem_sparc_bin.tar
tar xvf xylem_sparc_bin.tar

The resultant files are executable, stand-alone, already linked
Sparc binaries. 

B. Compiling the programs (if necessary)
----------------------------------------

1. PASCAL code (sun4 only)
- - - - - - - - - - - - -
On most Sun Sparc systems, you should be able to use the pre-
compiled binaries, and can skip this section. Should you need to
recompile, (eg. you wish to change program constants) the directory
src/pascal_tools contains the tools necessary for recompiling and
modifying the programs. Modification of the programs is discussed
later in this document. 

First, copy the Pascal source to src/install:

cd src
cp *.p install

Next, 

cd install
compile.csh

to compile the programs using the Sun Pascal compiler.  By default,
compile.csh will compile all files with the ".p" extension and
write the executable code to the "bin" directory. Executable code 
will have library routines loaded at compile time, meaning that
they should run even on workstations that do not have Pascal
libraries on line. 

You can modify compile.csh to write binaries to any directory you
wish, or to load library routines dynamically, if your workstation
has Pascal libraries. See comments in compile.csh for more
information.

2. C code (Sun, HP, GNU C )
- - - - - - - - - 

C code is provided in the directory src.c. Code has been tested using
the following compilers:

compiler   platform
-------------------
  cc       Sun
  cc       HP/UX
  gcc      Sun
  gcc      AIX

See README for more information.

C. Copying files
----------------

Make sure the files in the bin directory are world
readable/executable:

cd bin
chmod 755 *

Copy the contents of the "bin" directory to the directory in which
you wish the executables to reside. For example:

cp  *  /usr/local/bin


Copy the contents of the doc directory to the directory in which
you wish documentation to reside. For example, 

cd ../doc
cp *.doc /usr/local/doc/xylem

You may wish to set an environment variable in your .cshrc file telling
where the documentation is. For example, if $doc is set as follows,

setenv doc /usr/local/doc

then '$doc/xylem' would be the directory for XYLEM documentation.


D. Setting environment variables and path
-----------------------------------------

1) PATH
The location of the XYLEM programs must added to the $path
environment variable. For example, your .cshrc file might contain

set path = ($path usr/local/bin)

if you had copied the programs to /usr/local/bin (Note: if /usr/local/bin
is already in your $path, you don't need to do this).

2) Environment variables
There are some syntactical differences in some Unix commands across 
different platforms. In the case of FETCH, FINDKEY and FEATURES, slightly
different syntax is used for the 'grep' and 'rm' commands, dependent
on the environment variable XYLEM_PLATFORM. If this variable is not
set, it will default to 'sun'. As of this release, the following values
for XYLEM_PLATFORM are allowed:

   Platform                            include this in .cshrc:
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   Sun4, Sparc etc.                    setenv XYLEM_PLATFORM sun
   Hewlett Packard HP/UX               setenv XYLEM_PLATFORM HP
   IBM RS/6000 AIX                     setenv XYLEM_PLATFORM AIX

No other environment variables need to be set if you only plan to
use XYLEM for working with personal database subsets. However, if
you plan to use XYLEM to format and access local copies of GenBank,
PIR, VecBase etc., additional variables must be set. See "MANAGING
GENBANK & PIR" below for more information.

3) Overwriting existing files
Finally, make sure that 'noclobber' is not set in your .cshrc file. That is,
comment out of your .cshrc file any line that says

set noclobber

This command prevents the overwriting of already existing files, which is
necessary for many XYLEM programs. To comment it out, simply put a '#' in
the first column:

#set noclobber

E. Testing the programs
-----------------------

The 'test' directory contains sample input and output files. To
verify that the programs will run properly on your workstation:

1) If you have just installed XYLEM as in D above, logout and login
again so that changes in your .cshrc file can take effect.

2) cd to the 'test' directory

3) Type

testxylem.csh

This script will run each program and then use the Unix 'diff'
commend to compare the test output with the accompanying sample
output files. Testfiles are automatically removed if the files
compare okay, but are retained in the 'test' directory if
differences are found. 

testxylem.csh can also test one program at a time if you give it a
program name as argument. For example, to test splitdb type

testxylem.csh splitdb 
 
***************************************************
II. WHAT IF YOU DON'T WANT TO INSTALL ALL OF XYLEM?
***************************************************

Depending on what you have at your local installation, you may not
wish to install all of XYLEM. For example, you may wish to install
FEATURES, but use other software for database keyword searches and
to retrieve entries. Most of the programs are standalone
applications. However, several of the csh scripts call other
programs, which must also be installed. These are described below:

FETCH - calls GETLOC, SPLITDB

FINDKEY - calls IDENTIFY, SPLITDB

FEATURES - calls GETOB, FETCH (and therefore GETLOC) and SPLITDB.
One qualification must be made here. FEATURES doesn't actually need
to know anything about where GenBank is stored, or how it is
formatted. These tasks are taken care of by FETCH. Therefore,
FEATURES can use other database software to retrieve entries from
GenBank as needed. 

The following two lines from FEATURES are the only calls to FETCH:

fetch $fetchfile FEA.$jobid.gen
fetch FEA.$jobid.nam FEA.$jobid.gen

With this form of FETCH, the first argument is the name of a file
containing one or more GenBank accession numbers, each separated by
a newline (carriage return) character. (see sample.acc). The second
argument is the file to which GenBank flatfile entries should be
written (eg. it would look like sample.gen). Thus, to get FEATURES
to work with other software, all you need to do is to replace these
lines with the command on your system that, given a list of
accession numbers, returns GenBank entries in the standard flatfile
format. 

If FEATURES is installed in this fashion, FETCH and GETLOC are not
needed, while GETOB and SPLITDB must still be installed.

**********************************************
III. SPECIAL INSTALLATION NOTES FOR GDE
*********************************************

While programs like FETCH, FINDKEY, and FEATURES have easy-to-use
menus, they are even more powerful when used with the Genetic Data
Environment (GDE) by Steven Smith (available by anonymous FTP at
megasun.bch.umontreal.ca). GDE is essentially a generic user interface
that programs. Intrinsically, GDE contains a sequence alignment
editor and a number of other functions. In addition to its
intrinsic functions, GDE reads in information necessary to call
other programs from a file called .GDEmenus. For each program added
to GDE, .GDEmenus contains an entry specifying what should appear
in a pop-up menu (eg. choice buttons, pull-down "chooser" menus,
sliders for numerical arguments, or free text), as well as the
command to be issued by GDE to call the program.  

Since the XYLEM programs can all be run using command line options,
they are easy to run under GDE. Assuming that both GDE and XYLEM
are already running on your system, getting GDE to call XYLEM
requires only two steps: 1) adding the menu items found in
xylem/GDE/XYLEM.GDEmenus to the .GDEmenus file 2) copying anciliary
files to the $GDE_HELP_DIR directory. More specific instructions
can be found in xylem/GDE.

HP/UX NOTE: XYLEM has not been tested yet using GDE on Hewlett-Packard
systems. Since all the component programs work, it should work. 
However, the program calls (itemmethod) in .GDEmenus may need to
be changed to conform to HP syntax.

********************************************
IV. MANAGING GENBANK & PIR
*********************************************

A. Downloading GenBank & PIR
----------------------------
The directories GenBank and PIR, found in xylem/admin, can be moved
to wherever is convenient. The environment variables $GB and $PIR
should be set to indicate their locations eg.

setenv GB /home/psgendb/Genbank

NOTE: These environment variables can be set automatically. See
"Administering databases for other users" below.

Two scripts, GBUPDATE and PIRUPDATE automate the process of
downloading GenBank and PIR by anonymous FTP. To run these scripts,
the environment variable $MAILID must be set, containing your email
address for use as a password during the FTP login process. In the
following example, the PIR database files listed in
$PIR/sample.filelist  will be downloaded by PIRUPDATE. The
PIRUPDATE command is run as a batch job using the Unix 'at'
facility.

%cd $PIR
%at 21:00
at>pirupdate sample.filelist
at> <EOT>                     {user types ctrl-D here}
job 4683 at Sun Aug. 8 21:00 1993
%    

PIRUPDATE downloads and uncompresses ASCII versions of PIR files.
Files with the extension '.dat' are split using splitdb into
annotation (.ano) sequence (.wrp) and index (.ind) files.
Permissions are set to be world readable. You may choose to move
documentation files to a separate directory eg. $doc/PIR.

Downloading of GenBank by gbupdate is essentially the same, but
there are several differences. First, IT IS ESSENTIAL THAT THE FILE
GBACC.IDX BE DOWNLOADED. This file is used by FETCH to map
accession numbers and locus names to database files. In contrast,
for PIR, FETCH uses index files created by splitdb, rather than a
ny index files supplied with the database. Second, GenBank files at
NCBI have the extension '.seq'. Consequently, GBUPDATE runs splitdb
for all files with the '.seq' extension.

To summarize, at the end of the down load, each database file is split
into three files. For PIR,

                               pir1.dat
                                   |splitdb
                                   v
              ------------------------------------------
              v                    v                    v
         pir1.ano               pir1.wrp              pir1.ind
        (annotation)       (W.R.Pearson-format        (index)
                               sequence)

or, for GenBank,

                               gbrod.seq
                                   |splitdb
                                   v
              ------------------------------------------
              v                    v                    v
         gbrod.ano               gbrod.wrp            gbrod.ind
        (annotation)       (W.R.Pearson-format        (index)
                               sequence)


Databases split by splitdb usually shrink by about 8 or 9% relative
to the Unix ASCII versions. GBUPDATE and PIRUPDATE can be modified
to optimize the use of disk space during the download when space 
is tight. First, changing the variable 'tempdir' to /tmp will cause
compressed files to be written initially to the /tmp directory, and
the uncompressed output for non-sequence files written to $GB or
$PIR. Also, there is code in each script that removes the current
version of the next file to be downloaded, if it exists, prior to
downloading the new version. This code can be commented out if not
needed.

At any time during the download, the disk space quota must have
enough extra room to hold an extra copy of the next file to be
downloaded. Thus, if space is tight, it is best to download in
decreasing order of file size. This can be done simply by
reordering the files in 'filelist'.

B. Administering databases for other users.
-------------------------------------------
The csh script 'newuser' appends 'source' commands to the ends of
the user's .login and .cshrc files, as illustrated in the example
below:

appended to .login:

##################################################
# login.source is a file that contains setup commands 
# for molecular biology users. The source command
# causes it to be read and executed at login. 
##################################################
source ~psgendb/admin/login.source


appended to .cshrc:

##################################################
# cshrc.source is a file that contains setup commands 
# for molecular biology users. The source command
# causes it to be read and executed each time a new
# c-shell is initiated. 
##################################################
source ~psgendb/admin/cshrc.source

 
The file login.source is primarily for setting the user's $path
environment variable, but can be used for other tasks that might
need to be done at login. For example, there is code in this file
which, if uncommented, will cause text in the file Login_Message
to be printed at login time. The file cshrc.source is primarily
for setting environment variables that tell where database and
documentation files are. It can also be used for executing any
commands that should be run everytime a new shell is run.

*********************************************
V. RE-COMPILING AND MODIFYING XYLEM PROGRAMS
*********************************************

See src/README.

*********************************************
VI. RUNNING XYLEM ON A REMOTE HOST
*********************************************
FINDKEY and FETCH have the ability to call copies of themselves on
other hosts. By extension, if FETCH can be called remotely, FEATURES
can also access databases on a remote host, by calling FETCH. The
significance of this is that if you have the databases installed
on one workstation, you can run XYLEM on any other workstation and
still automatically access the databases. For more information
on running these programs remotely, see 'REMOTE EXECUTION' in 
findkey.doc and fetch.doc.

*************
VII. Clean up
*************

Assuming that you have copied executables into a centrally-
located 'bin' directory (eg. /usr/local/bin) and documentation
into a centrally-located 'doc' directory (eg. $doc/xylem) you
can delete the entire xylem directory. If you are
administering XYLEM and databases for others, the 'admin'
directory should be copied wherever is convenient and made world
read/executable. If you are using XYLEM with GDE, you need to
install the files from the 'GDE' directory as described above
before deleting this directory. You may also wish to make the
'test' directory available for other users.

